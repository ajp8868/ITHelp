@model ITHelp_Models.Ticket
@{ViewBag.Title = "Edit Ticket";}
@section Styles {
    <link href="@Url.Content("~/Content/Edit.css")" rel="stylesheet" type="text/css" />
}
<h2>Edit Ticket: @Html.DisplayFor(model=>model.Title)<br/>Ref: @Html.DisplayFor(model=>model.Reference)</h2>
<br/>
    @using (Html.BeginForm("tickets/edit", "public"))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Reference)
            @Html.HiddenFor(model => model.Raised)
            @Html.HiddenFor(model => model.Completed_On)
            @Html.HiddenFor(model => model.Type_Id)
            @Html.HiddenFor(model => model.Status_Id)
            @Html.HiddenFor(model => model.Raised_By)
            @Html.HiddenFor(model => model.Needs_Approval)
            @Html.HiddenFor(model => model.Approved_By)
            @Html.HiddenFor(model => model.Cancelled)
            @Html.HiddenFor(model => model.Cancelled_Reason)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Urgency_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Urgency_Id", new SelectList((List<ITHelp_Models.Ticket_Urgencies>)ViewBag.urgencies, "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Urgency_Id, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.Label("Awaiting Approval?", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if(Model.Needs_Approval)
                    {
                        @("Yes");
                    }
                    else
                    {
                        @("No");
                    }
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Required_By, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Required_By, new { htmlAttributes = new { @class = "form-control datepicker", placeholder="Enter Date..." } })
                    @Html.ValidationMessageFor(model => model.Required_By, "", new { @class = "text-danger" })
                </div>
            </div>
            <script type="text/javascript">
                    $(function () { // will trigger when the document is ready
                        $('.form-control.datepicker').datepicker({ dateFormat: 'dd/mm/yy' }); //Initialise any date pickers
                    });
            </script>
    <p></p>
            <div class="form-group" style="width: 100%; text-align: center;display: inline-block; float: initial">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn_save" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Tickets", null, new { @class = "btn btn_back" })
    </div>
