@model ITHelp_Models.Ticket
@section Styles {
    <link href="@Url.Content("~/Content/Edit.css")" rel="stylesheet" type="text/css" />
}
<h2>Edit Ticket: @Model.Title<br />@Model.Reference</h2>
<br/><br/>
@using (Html.BeginForm("Edit","Admin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
       
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Reference)
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Raised, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="input-group-sm col-md-10">
                    @Html.TextBoxFor(model => model.Raised, new { @class = "form-control datepicker", placeholder = "Enter date here..." })
                    @Html.ValidationMessageFor(model => model.Raised)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Status_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Status_Id", new SelectList((List<ITHelp_Models.Ticket_Statuses>)ViewData["statuses"], "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status_Id, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Completed_On, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Completed_On, new { htmlAttributes = new { @class = "form-control datepicker", placeholder = "Enter date here..." } })
                    @Html.ValidationMessageFor(model => model.Completed_On, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Urgency_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Urgency_Id", new SelectList((List<ITHelp_Models.Ticket_Urgencies>)ViewData["urgencies"], "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Urgency_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Type_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Type_Id", new SelectList((List<ITHelp_Models.Ticket_Types>)ViewData["types"], "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type_Id, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Raised_By, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Raised_By", new SelectList((List<ITHelp_Models.User>)ViewData["users"], "Id", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Raised_By, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Required_By, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="input-group-sm col-md-10">
                    @Html.TextBoxFor(model => model.Required_By, new { @class = "form-control datepicker", placeholder = "Enter date here..." })
                    @Html.ValidationMessageFor(model => model.Required_By)
                </div>
                <script type="text/javascript">
                    $(function () { // will trigger when the document is ready
                        $('.form-control.datepicker').datepicker({ dateFormat: 'dd/mm/yy' }); //Initialise any date pickers
                    });
                </script>
            </div>
            <div id="approval">
            <div class="form-group block">
                @Html.LabelFor(model => model.Needs_Approval, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Needs_Approval)
                        @Html.ValidationMessageFor(model => model.Needs_Approval, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Approved_By, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Approved_By, new SelectList((List<ITHelp_Models.User>)ViewData["users"], "Id", "Name"), "Please Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Approved_By, "", new { @class = "text-danger" })
                </div>
            </div>
    </div>
            <div class="form-group btn">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn_save" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn_back" })
    </div>
